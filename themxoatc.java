/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package manageGarage;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ManhCuong
 */
public class themxoatc extends javax.swing.JInternalFrame {
      private String header[] = {"ma tc","loai tc", "don gia"};
    private DefaultTableModel tblModel = new DefaultTableModel(header, 0);
    int row=0;
     
    public themxoatc() {
        initComponents();
        loadTable();
        sua.setVisible(false);
        xoa.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        matc = new javax.swing.JTextField();
        loaitc = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        them = new javax.swing.JButton();
        xoa = new javax.swing.JButton();
        sua = new javax.swing.JButton();
        thoat = new javax.swing.JToggleButton();
        nhapdongia = new javax.swing.JLabel();
        dongia = new javax.swing.JTextField();
        status = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setForeground(new java.awt.Color(204, 0, 0));
        setTitle("Thêm/ Xóa tiền công");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã tiền công", "Loại tiền công", "Đơn Giá"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Mã tiền công:");

        matc.setEnabled(false);
        matc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matcActionPerformed(evt);
            }
        });

        loaitc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loaitcActionPerformed(evt);
            }
        });
        loaitc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                loaitcKeyPressed(evt);
            }
        });

        jLabel2.setText("Tên tiền công:");

        jLabel3.setText("NHẬP tHÔNG TIN");

        them.setText("Thêm");
        them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                themActionPerformed(evt);
            }
        });

        xoa.setText("Xóa");
        xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xoaActionPerformed(evt);
            }
        });

        sua.setText("Cập nhật");
        sua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suaActionPerformed(evt);
            }
        });

        thoat.setText("Thoát");
        thoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thoatActionPerformed(evt);
            }
        });

        nhapdongia.setText("Đơn giá:");
        nhapdongia.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                nhapdongiaAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        dongia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dongiaKeyPressed(evt);
            }
        });

        status.setText("Status:");
        status.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                statusAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jLabel4.setForeground(new java.awt.Color(204, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 612, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(status)
                        .addGap(241, 241, 241)
                        .addComponent(xoa, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(thoat))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(nhapdongia, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(146, 434, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(dongia, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(loaitc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(matc, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(them, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(sua))
                                        .addGap(79, 79, 79))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(13, 13, 13)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(jLabel3)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(matc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(them))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(loaitc)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dongia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nhapdongia)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(sua)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(status)
                    .addComponent(xoa)
                    .addComponent(thoat))
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void matcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matcActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_matcActionPerformed

    private void thoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thoatActionPerformed
    this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_thoatActionPerformed

    private void xoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xoaActionPerformed
      int indexOfSelectedRow = jTable1.getSelectedRow();
        if (indexOfSelectedRow == -1) {
            JOptionPane.showConfirmDialog(this, "You have not selected Khoa to delete yet!", "Information", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        int ret = JOptionPane.showConfirmDialog(this, "Xóa dữ liệu?", "Confirm", JOptionPane.YES_NO_OPTION);
        if (ret != JOptionPane.YES_OPTION) {
            return;
        }

        int idtc = Integer.parseInt(jTable1.getModel().getValueAt(indexOfSelectedRow, 0).toString());

        Connection conn = null;
        PreparedStatement ps = null;
        ResultSet rs = null;
        String deletesql = "Delete From tiencong where idtc = ?";
        String dbURL = "jdbc:sqlserver://127.0.0.1:1433;databaseName=garaoto;user=sa;password=sa";
        try {
            conn = DriverManager.getConnection(dbURL);
            ps = conn.prepareStatement(deletesql);
            ps.setInt(1, idtc);
            ret = ps.executeUpdate();
            if (ret != -1) {
                JOptionPane.showMessageDialog(this, "xác nhận xóa thông tin");
            }
           // this.search();
        } catch (Exception ex) {
            ex.printStackTrace();
        } finally {
            try {
                if (conn != null) {
                    conn.close();
                }
                if (ps != null) {
                    ps.close();
                }
            } catch (Exception ex2) {
                ex2.printStackTrace();
            }
        }
        loadTable();
   
    }//GEN-LAST:event_xoaActionPerformed
     //else JOptionPane.showMessageDialog(rootPane, " Hãy chọn một hàng trong bảng để xóa.");
    //}
    private void themActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_themActionPerformed

        Connection conn = null;
        PreparedStatement ps = null;
        ResultSet rs = null;

        String dbURL = "jdbc:sqlserver://127.0.0.1:1433;databaseName=garaoto;user=sa;password=sa";
        

        try {
            String insert = "INSERT INTO TIENCONG (TENTC, GIA) VALUES(?,?)";
            conn = DriverManager.getConnection(dbURL);
            ps = conn.prepareStatement(insert);
            if(loaitc.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, " Ten tc ko dc bỏ trống!");
            }else{
                ps.setString(1, loaitc.getText());
            }
            
            if(dongia.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, " Đơn gia ko dc bỏ trống!");
                
            }else{
                ps.setString(2, dongia.getText());
                
            }

            int ret = ps.executeUpdate();
            if (ret != -1) {
                status.setText("Thêm thành công");
            }matc.setText("");
            loaitc.setText("");
            dongia.setText("");
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e.getMessage() , "Lỗi", 1);
            loaitc.setText("");
            dongia.setText("");
        } finally {
            try {
                if (conn != null) {
                    conn.close();
                }

                if (rs != null) {
                    rs.close();
                }

                if (ps != null) {
                    ps.close();
                }
            } catch (Exception ex2) {
                ex2.printStackTrace();
            }
        }
        loadTable();                                 
    
    }//GEN-LAST:event_themActionPerformed
private void loadTable() {
        Connection conn = null;
        Statement st = null;
        ResultSet rs = null;
        String dbURL = "jdbc:sqlserver://127.0.0.1:1433;databaseName=garaoto;user=sa;password=sa";
      
        try {
            conn = DriverManager.getConnection(dbURL);

            
            // Câu lệnh xem dữ liệu
            String sql = "select idtc, tentc, gia from TIENCONG";
            

            // Tạo đối tượng thực thi câu lệnh Select
            st = conn.createStatement();

            // Thực thi 
            rs = st.executeQuery(sql);
            Vector data = null;

            tblModel.setRowCount(0);

            // Nếu sách không tồn tại
            if (rs.isBeforeFirst() == false) {
                JOptionPane.showMessageDialog(this, " Không có tiền công!");
                return;
            }

            // Trong khi chưa hết dữ liệu
            while (rs.next()) {
                data = new Vector();
                data.add(rs.getString("idtc"));
                data.add(rs.getString("tentc"));
                data.add(rs.getString("gia"));

                // Thêm một dòng vào table model
                tblModel.addRow(data);
            }

            jTable1.setModel(tblModel); // Thêm dữ liệu vào table
            
            

        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (conn != null) {
                    conn.close();
                }
                if (st != null) {
                    st.close();
                }
                if (rs != null) {
                    rs.close();
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }
    private void suaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suaActionPerformed
int ret = JOptionPane.showConfirmDialog(this, "bạn muốn câp nhật lại dữ liệu?", "Confirm", JOptionPane.YES_NO_OPTION);
        if (ret != JOptionPane.YES_OPTION) {
            return;
        }

        String update = "update TIENCONG set tentc = ?,gia = ? where idtc = ?";
        //System.out.println(update);

        Connection conn = null;
        PreparedStatement ps = null;
        ResultSet rs = null;

        String dbURL = "jdbc:sqlserver://127.0.0.1:1433;databaseName=garaoto;user=sa;password=sa";
        try {
            conn = DriverManager.getConnection(dbURL);
            ps = conn.prepareStatement(update);

            ps.setString(1, loaitc.getText());
            ps.setString(2, dongia.getText());
            ps.setInt(3, Integer.parseInt(matc.getText()));

            ret = ps.executeUpdate();
            if (ret != -1) {
                status.setText("cập nhật thành công");
            }
            //this.search();
            matc.setText("");
            loaitc.setText("");
            dongia.setText("");

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e.getMessage() , "Lỗi", 1);
        } finally {
            try {
                if (conn != null) {
                    conn.close();
                }

                if (rs != null) {
                    rs.close();
                }

                if (ps != null) {
                    ps.close();
                }
            } catch (Exception ex2) {
                ex2.printStackTrace();
            }
        }
        loadTable();                                 

    }//GEN-LAST:event_suaActionPerformed

    private void nhapdongiaAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_nhapdongiaAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_nhapdongiaAncestorAdded

    private void loaitcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loaitcActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loaitcActionPerformed

    private void statusAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_statusAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_statusAncestorAdded

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        matc.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
        loaitc.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
        dongia.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());
        them.setVisible(false);
        xoa.setVisible(true);
        sua.setVisible(false);
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void loaitcKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_loaitcKeyPressed
 String xe=loaitc.getText();
        int limit=xe.length();
        char chr=evt.getKeyChar();
        if(chr==8){
            if((limit-1)<1)
            {
                jLabel4.setVisible(false);
                return;
            }
        }
        
        if(chr>='0' && chr<='9'  )
        {
            jLabel4.setVisible(true);
            them.setVisible(false);
            sua.setVisible(false);
            jLabel4.setText(" Bạn đã nhập sai!");
            loaitc.setText("");
            return;
       }else{
//            them.setVisible(true);
            sua.setVisible(true);
        }
             
        
        if(xe.length()<5||xe.length()>29){
            jLabel4.setText(" Tên không tiền công không đúng!");
            jLabel4.setVisible(true);
            sua.setVisible(false);
            them.setVisible(false);
        } else {
            jLabel4.setVisible(false);
            sua.setVisible(true);
            them.setVisible(true);
        }
      // => chuối từ 5-30 ký tự
    }//GEN-LAST:event_loaitcKeyPressed

    private void dongiaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dongiaKeyPressed
          
          String xe=dongia.getText();
        int limit=xe.length();
        char chr=evt.getKeyChar();
        if(chr==8){
            if((limit-1)<1)
            {
                jLabel4.setVisible(true);
                them.setEnabled(false);
                sua.setEnabled(false);
                return;
            }
        }
        if(chr>='1' && chr<='9'  )
        {
            jLabel4.setVisible(false);
            them.setEnabled(true);
            sua.setEnabled(true);
            return;
        }
        else {
            jLabel4.setText(" Bạn đã nhập sai! ");
        
        }
       
        // TODO add your handling code here:
    }//GEN-LAST:event_dongiaKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField dongia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField loaitc;
    private javax.swing.JTextField matc;
    private javax.swing.JLabel nhapdongia;
    private javax.swing.JLabel status;
    private javax.swing.JButton sua;
    private javax.swing.JButton them;
    private javax.swing.JToggleButton thoat;
    private javax.swing.JButton xoa;
    // End of variables declaration//GEN-END:variables
}
